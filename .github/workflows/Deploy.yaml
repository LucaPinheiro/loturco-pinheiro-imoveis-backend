name: Deploy

on:
  push:
    branches:
      - "*"
  pull_request:
    branches:
      - "*"

jobs:
  CD:
    runs-on: ubuntu-latest
    environment: ${{ github.ref_name }}
    if: ${{ github.event_name == 'push' && (github.ref_name == 'dev' || github.ref_name == 'uat' || github.ref_name == 'prod') }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Debug Environment Variables
        run: |
          echo "Debugging Environment Variables"
          echo "STAGE=${{ github.ref_name }}"
          echo "AWS_ACCOUNT_ID=${{ secrets.AWS_ACCOUNT_ID }}"
          echo "AWS_REGION=${{ secrets.AWS_REGION }}"
          echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}"
          echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}"
          echo "STACK_NAME=loturco-pinheiro-imoveis"

      - name: Export Environment Variables
        run: |
          echo "Exporting environment variables"
          export STAGE=${{ github.ref_name }}
          export AWS_REGION=${{ secrets.AWS_REGION }}
          export AWS_ACCOUNT_ID=${{ secrets.AWS_ACCOUNT_ID }}
          export AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
          export AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
          export STACK_NAME=loturco-pinheiro-imoveis
          echo "STAGE=$STAGE"
          echo "AWS_REGION=$AWS_REGION"
          echo "AWS_ACCOUNT_ID=$AWS_ACCOUNT_ID"
          echo "STACK_NAME=$STACK_NAME"
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: AWS Credentials
        run: |
          echo "Configuring AWS Credentials"
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set default.region ${{ secrets.AWS_REGION }}
          aws configure set default.output json

      - name: Install CDK
        run: |
          echo "Installing CDK"
          npm install -g aws-cdk

      - name: Install dependencies
        run: |
          echo "Installing dependencies"
          cd deploy
          pip install -r requirements.txt

      - name: Creating Layers Directory
        run: |
          echo "Creating Source Core Layers"
          mkdir -p deploy/lambda_layers/python
          mkdir -p deploy/lambda_layers/python/app
          pip install -r requirements.txt -t deploy/lambda_layers/python
          rsync -av --exclude='routes/' app/ deploy/lambda_layers/python/app

      - name: CDK Bootstrap
        run: |
          echo "CDK Bootstrap"
          cd deploy
          aws cloudformation describe-stacks --stack-name CDKToolkit 2>&1 > /dev/null || \
            cdk bootstrap aws://${{ secrets.AWS_ACCOUNT_ID }}/${{ secrets.AWS_REGION }}

      - name: CDK Deploy
        run: |
          echo "CDK Deploy"
          cd deploy
          cdk deploy --require-approval never
        env:
          STAGE: ${{ github.ref_name }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          STACK_NAME: loturco-pinheiro-imoveis
